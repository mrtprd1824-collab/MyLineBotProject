"""empty message

Revision ID: 8a2259b36ecf
Revises: 648bb432f521
Create Date: 2025-09-13 16:52:30.098490

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '8a2259b36ecf'
down_revision = '648bb432f521'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_groups')
    op.drop_table('lineaccount_groups')
    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('fk_message_group_id_group'), type_='foreignkey')
        batch_op.drop_column('group_id')

    with op.batch_alter_table('quick_reply', schema=None) as batch_op:
        batch_op.alter_column('text',
               existing_type=sa.TEXT(),
               type_=sa.String(length=1000),
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('ix_quick_reply_name'))

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('phone', sa.String(length=20), nullable=True))
        batch_op.add_column(sa.Column('note', sa.Text(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('note')
        batch_op.drop_column('phone')

    with op.batch_alter_table('quick_reply', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_quick_reply_name'), ['name'], unique=False)
        batch_op.alter_column('text',
               existing_type=sa.String(length=1000),
               type_=sa.TEXT(),
               existing_nullable=False)

    with op.batch_alter_table('message', schema=None) as batch_op:
        batch_op.add_column(sa.Column('group_id', sa.INTEGER(), nullable=True))
        batch_op.create_foreign_key(batch_op.f('fk_message_group_id_group'), 'group', ['group_id'], ['id'])

    op.create_table('lineaccount_groups',
    sa.Column('line_account_id', sa.INTEGER(), nullable=True),
    sa.Column('group_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name=op.f('fk_lineaccount_groups_group_id_group')),
    sa.ForeignKeyConstraint(['line_account_id'], ['line_account.id'], name=op.f('fk_lineaccount_groups_line_account_id_line_account'))
    )
    op.create_table('user_groups',
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.Column('group_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], name=op.f('fk_user_groups_group_id_group')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('fk_user_groups_user_id_user'))
    )
    # ### end Alembic commands ###
